#!/usr/bin/env ruby

puts "Trend"

require './lib/sample'
require './lib/csv_parser'
require './lib/analiser'
require './lib/chart'
require './lib/trend'
require './lib/calculate'
require './lib/point'
require 'pry'

START_POINT = 0
END_POINT = 1000

puts "Parsing csv input..."

filename = './data/sx5e_index.csv'
points = CsvParser.parse(filename)

points = points[START_POINT..END_POINT]

puts "Analysing #{points.count} points..."

analiser = Analiser.new(points)

trends = []
low_points = []
last_trend = nil
analiser.run do |trend|
  trends << trend.first
  low_points << trend.last
  pos = trend.last.position
  Chart.chart_trend(points, pos, last_trend, trend.first) if last_trend
  last_trend = trend.first
end

puts "Creating chart..."

chart = Chart.new(type: :line, size: 5000)
chart.labels(points.map { |p| p.date.to_s }, 4)

%i{ mov_avg_20d mov_avg_50d px_high }.each do |p|
  chart.data(p, points.map(&p))
end

trends.each_with_index do |trend_line, i|
  chart.data("trend-#{i}", Chart.create_trend_line(trend_line.first, trend_line.last))

  x = (low_points[i].position - trend_line.first.position) + trend_line.last.position
  y = (low_points[i].px_high - trend_line.first.px_high) + trend_line.last.px_high
  last = Sample.new(position: x, px_high: y)
  chart.data("lt#{i}", Chart.create_trend_line(low_points[i], last))
end

chart.write('bob.png')
`open bob.png`
#`convert -delay 4 output/*.png output/output.gif`
